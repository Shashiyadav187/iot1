/*
 * File: app/view/LightbulbViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.LightbulbViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.lightbulb',

    onLightbulbClick: function() {
                var vm = this.getViewModel();
                var lightId = vm.get('lightId');
                if (lightId == 0) {
                    Ext.Msg.alert("Error","You must select a bulb");
                    return;
                }
                var status = vm.get('lightStatus');
                vm.set('lightStatus',!status );
                this.lookupReference('lightscombo').getSelection().set('state', !status );

                Ext.Ajax.request({
                    url: '/hue',
                    method: 'PUT',
                    params: {
                        id: vm.get('lightId'),
                        turnOn: !status
                    },
                    success:function(response) {
                        console.log(response);
                    }
                });
    },

    onLightbulbContextMenuClick: function(e) {
        e.preventDefault();
        var vm = this.getViewModel();
        var lightId = vm.get('lightId');

        if (lightId == 0) {
            Ext.Msg.alert("Error","You must select a bulb");
            return;
        }
        vm.set('lightStatus',true);
        Ext.Ajax.request({
            url: '/hue',
            method: 'POST',
            params: {
                id: vm.get('lightId')
            },
            success:function(response) {
                console.log(response);
            }
        });

    },

    onComboboxChange: function(field, newValue, oldValue, eOpts) {
        var vm = this.getViewModel();
        var selection = field.getSelection();
        vm.set('lightId',selection.get('id'));
        vm.set('lightStatus', selection.get('state'));

    },

    onWindowAfterRender: function(component, eOpts) {
        var l = this.lookupReference('lightbulbImg');
        l.getEl().on('click', this.onLightbulbClick, this);
        l.getEl().on('contextmenu', this.onLightbulbContextMenuClick, this);
    }

});
